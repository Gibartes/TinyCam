# TinyCam config.yaml


# ── Basics ────────────────────────────────────────────────────────────────
platform: auto
device: '@device_pnp_\\?\usb#vid_045e&pid_0812&mi_00#6&151e9577&0&0000#{65e8773d-8f56-11d0-a3b9-00a0c9223196}\global'
width: 1280
height: 720
fps: 30
ffmpegPath: C:/ffmpeg/ffmpeg.exe
ffmpegDebug: false

# ── Encoding (lightweight first: h264_qsv recommended) ───────────────────
# codec: h264 | vp9 | av1
encoder: qsv          # qsv (Intel QSV), nvenc (NVIDIA GPU), cpu
videoCodec: vp9       # vp9 av1 h264 h265
useLowPower: true
gop: 60               # -g
keyintMin: 60         # -keyint_min (optional)

# h264_qsv-only bitrates (kbps)
useBitrate: false
bitrateKbps: 3000
maxrateKbps: 3000
bufsizeKbps: 6000

# AV1 / VP9 constant quality (lower = higher quality)
globalQuality: 28

# ── Output / Segments / Filenames ────────────────────────────────────────
outputDir: 'C:/Recordings'     # Pre-create recommended (path without spaces)
segmentUnit: second            # second | hour
segmentSeconds: 60             # if 'second' → seconds, if 'hour' → hours
fileNamePattern: 'camera_%Y-%m-%dT%H-%M-%S'
streamOnly: false

# Container auto/forced
# - auto: h264 -> mp4 (files) & mkv (pipe),  av1/vp9 -> webm (files/pipe)
segmentFormat: auto            # auto | webm | mp4 | matroska
pipeFormat: auto               # auto | webm | mp4 | matroska
pipeLive: true                 # apply live tuning when pipe is webm
clusterTimeLimitMs: 1000       # webm live cluster time
clusterSizeLimitBytes: 1048576 # webm live cluster size (1MB)

# ── Input stabilization (common for dshow/v4l2) ──────────────────────────
rtbufSize: '512M'
threadQueueSize: 1024
useWallclockTimestamps: true

# ── Encrypted storage ────────────────────────────────────────────────────
saveEncryptedConfig: false
isEncrypted: false
cipher:

# ── Extra ffmpeg arguments ───────────────────────────────────────────────
extraInputArgs:
extraEncoderArgs:
extraOutputArgs:

# ── Audio ────────────────────────────────────────────────────────────────
enableAudio: false
audioDevice: 'Microphone (USB Camera XYZ)'  # full dshow device name
audioCodec: auto          # auto|aac|libopus|copy
audioBitrateKbps: 96
audioSampleRate: 48000
audioChannels: 2

# ── File management ──────────────────────────────────────────────────────
useFileRotation: true        # enable file rotation
retentionSweepSeconds: 30    # rotation sweep interval (seconds)
retainSafeWindowSeconds: 60
retainMaxFiles: 2
retainFilePrefix: "camera_"  # prefix of files to keep/clean (default: "camera_")

# ── System logging ───────────────────────────────────────────────────────
LogMode: stdout
LogMaxSizeMB: 1
LogMaxFiles: 2
LogRollDaily: false

# ── SSL ───────────────────────────────────────────────────────
# To use HTTPS, first change the "Url" in appsettings.json to start with "https://". Then, add the certificate entry here.
# Below is an example.
certificateType: pfx        # pfx | pem
pfxPath: C:\Utility\certs\tinycam_dev.pfx
pemCertPath: ""
pemKeyPath: ""
password: yourpassword      # password of encrypted certificates

# ── Casting Option ───────────────────────────────────────────────────────
channelCapacity: 256
channelTimeout: 60